<html>
    <head>
        <title>Hangman Game</title>
        <style>
            html{
                background-color: #0E2138;
            }
            .header{
                margin-top: 70px;
                margin-left: 570px;
            }
            .word{
                color: white;
            }
            .want{
                background-color: #0c5772;
                width: 35%;
                height: 300px;
                margin-left: 470px;
                margin-top: 100px;
                -webkit-border-radius: 70px;
                -moz-border-radius: 70px;
                border-radius: 70px;
            }
            .button-83 {
            appearance: button;
            background-color: transparent;
            background-image: linear-gradient(to bottom, #fff, #f8eedb);
            border: 0 solid #e5e7eb;
            border-radius: .5rem;
            box-sizing: border-box;
            color: #482307;

            cursor: pointer;
            display: flex;
            font-family: ui-sans-serif,system-ui,-apple-system,system-ui,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
            font-size: 100%;
            font-weight: 700;
            line-height: 24px;
            outline: 2px solid transparent;
            padding: 1rem 1.5rem;
            text-align: center;
            text-transform: none;
            transition: all .1s cubic-bezier(.4, 0, .2, 1);
            user-select: none;
            -webkit-user-select: none;
            touch-action: manipulation;
            box-shadow: -6px 8px 10px rgba(81,41,10,0.1),0px 2px 2px rgba(81,41,10,0.2);
            }

            .button-83:active {
            background-color: #f3f4f6;
            box-shadow: -1px 2px 5px rgba(81,41,10,0.15),0px 1px 1px rgba(81,41,10,0.15);
            transform: translateY(0.125rem);
            }

            .button-83:focus {
            box-shadow: rgba(72, 35, 7, .46) 0 0 0 4px, -6px 8px 10px rgba(81,41,10,0.1), 0px 2px 2px rgba(81,41,10,0.2);
            }

            button{
                margin-top: 70px;
                margin-left: 90px;
                gap: 10px;
            }
            h2{
                color: #F3E9E8;margin-left: 20px;
            }
            .intogame{
                height: 60%;
                margin-top: 60px;
            }
            .word{
                display: flex;
                gap: 160px;
                margin-left: 200px;
            }
            span {
                content: "\005F";
            }
            .guess{
                display: flex;
                margin-top: 14px;
            }
            select {
                -webkit-appearance:none;
                -moz-appearance:none;
                -ms-appearance:none;
                appearance:none;
                outline:0;
                box-shadow:none;
                border:0!important;
                background: #ecf6f4;
                background-image: none;
                flex: 1;
                padding: 0 .5em;
                color:#180808;
                cursor:pointer;
                font-size: 1em;
                font-family: 'Open Sans', sans-serif;
                }
                select::-ms-expand {
                display: none;
                }
                .select {
                    position: relative;
                    display: flex;
                    width: 20em;
                    height: 3em;
                    line-height: 3;
                    background: #e4e9e8;
                    overflow: hidden;
                    border-radius: .25em;
                    margin-left: 95px;
                    }
                    .select::after {
                    content: '\25BC';
                    position: absolute;
                    top: 0;
                    right: 0;
                    padding: 0 1em;
                    background: #2b2e2e;
                    cursor:pointer;
                    pointer-events:none;
                    transition:.25s all ease;
                    }
                    .select:hover::after {
                    color: #23b499;
                    }
                    .hint{
                        display: flex;
                        color: white;
                        margin-left: 400px;
                    }
                    .letter{
                        gap: 0px;
                        width: 50%;
                        margin-left: 70px;
                        margin-top: 180px;
                    }
                    .letter-button {
                    display: inline-block;
                    width: 40px;
                    height: 40px;
                    margin: 5px;
                    font-size: 18px;
                    text-align: center;
                    line-height: 40px;
                    border: 1px solid #ccc;
                    cursor: pointer;
                    background-color: #f0f0f0;
                    border-radius: 5px;
                }
                .letter-button:hover{
                    background-color: #85baf7;
                }
                .guessgame{
                    display: flex;
                }
                .hangman-game{
                    width: 40%;
                    margin-top: 70px;
                    height: 350px;
                    margin-left: 30px;
                }
                .butto{
                    display: flex;
                }
                #rule-section{
                    background-color: rgb(137, 185, 243);
                    color: black;
                    width: 35%;
                    height: 380px;
                    -webkit-border-radius: 70px;
                -moz-border-radius: 70px;
                border-radius: 70px;
                margin-left: 480px;
                margin-top: -350px;
                visibility: hidden;
                }
                .enterword{
                    margin-top: 60px;
                    width: 50%;
                    margin-left: 400px;
                }
                input{
                    height: 40px;
                    width: 200px;
                    margin-left: 240px;
                }

                #check{
                    margin-top: 30px;
                    margin-left: 290px;
                }
                .win{
                    width: 35%;
                    height: 300px;
                    background-color: rgb(3, 42, 63);
                    -webkit-border-radius: 70px;
                    -moz-border-radius: 70px;
                    border-radius: 70px;
                    margin-left: 500px;
                    margin-top: -800px;
                    visibility: hidden;
                }
                span{
                    margin-left: 170px;
                }
                .lost{
                    width: 35%;
                    height: 350px;
                    background-color: rgb(3, 42, 63);
                    -webkit-border-radius: 70px;
                    -moz-border-radius: 70px;
                    border-radius: 70px;
                    margin-top: -300px;
                    visibility: hidden;
                    margin-left: 470px;
                }
                .main{
                    margin-top: -440px;
                    visibility: hidden;
                }

            @media (max-width: 500px){
                h1{
                    margin-left: -490px;
                }
                h2{
                    margin-left: -440px;
                }
                .want{
                    margin-left: 10px;
                    width: 420px;
                }
                button{
                    margin-left: 150px;
                }
                .select{
                    margin-left: 55px;
                }
                .intogame{
                    width: 430px;
                }
                .word{
                    display: block;
                }
                h2{
                    margin-left: -230px;
                }
                .guess{
                    margin-left: -390px;
                    width: 15px;
                    font-size: 15px;
                }

            }
                    
        </style>
    </head>
    <body>
        <div class = "header" id = "header">
            <h1 style="color: #F3E9E8;">HANGMAN GAME</h1>
            <br>
        </div>
        <div class = "want" id = "want">
            <h1 style="visibility: hidden;">empty</h1>
            <div class = "select">
                <select name="" id="genre" placeholder="Select the Genre">
                    <option value="">Select the Genre</option>
                    <option value="m">Movies</option>
                    <option value="s">Science</option>
                    <option value="b">Books</option>
                    <option value="an">Actor Names</option>
                </select>
            </div>
            <div class = "butto">
            <button class = "button-83" id = rules>Rules</button>
            <button class = button-83 id = "play">Play Game</button>
            </div>
            
        </div>
        <div id = "rule-section">
            <p style="visibility: hidden;">hello</p>
            <h2 style="color: black;margin-top: 30px;margin-left: 200px;">RULES</h2>
            <ul>
                <li>Based on the give hint , guess the letters to see if they are present in the word or not.</li>
                <li>If you guess the wrong word, the hangman-game will be drawn</li>
                <li>You also have the option to enter the word directly if you want to.But remember that you can do so only 2 times and if You
                    enter a wrong word both times , you will lose.
                </li>
                <h3>Happy Game!!</h3>
                <button id = close class = button-83 style="margin-left: 150px;margin-top: 20px;">Close</button>
            </ul>
        </div>
        <div class = main id = main>
            <div class = "intogame">
                <div class = "word">
                    <h2>Word</h2>
                    <div class = "guess" id = "guess">
                    </div>
                </div>
                <div class = "hint" id = "hint">
                </div>
                <div class = "guessgame">
                    <div class = "hangman-game">
                        <div id = "hangman">

                        </div>
                    </div>
                    <div class = "letter">
                        <button class="letter-button" id = "letter-button" value = "A">A</button> 
                        <button id = "letter-button" class="letter-button" value="B">B</button> 
                        <button id = "letter-button" class="letter-button" value="C">C</button>
                        <button class="letter-button" id = "letter-button" value="D">D</button>
                        <button class="letter-button" id = "letter-button" value="E">E</button>
                        <button class="letter-button" id = "letter-button" value="F">F</button>
                        <button class="letter-button" id = "letter-button" value="G">G</button>
                        <button class="letter-button" id = "letter-button" value="H">H</button>
                        <button class="letter-button" id = "letter-button" value="I">I</button>
                        <button class="letter-button" id = "letter-button"value="J">J</button>
                        <button class="letter-button" id = "letter-button"value="K">K</button>
                        <button class="letter-button" id = "letter-button"value="L">L</button>
                        <button class="letter-button" id = "letter-button"value="M">M</button>
                        <button class="letter-button" id = "letter-button"value="N">N</button>
                        <button class="letter-button" id = "letter-button"value="O">O</button>
                        <button class="letter-button" id = "letter-button"value="P">P</button>
                        <button class="letter-button" id = "letter-button"value="Q">Q</button>
                        <button class="letter-button"id = "letter-button" value="R">R</button>
                        <button class="letter-button"id = "letter-button" value="S">S</button>
                        <button class="letter-button"id = "letter-button" value="T">T</button>
                        <button class="letter-button" id = "letter-button"value="U">U</button>
                        <button class="letter-button"id = "letter-button" value="V">V</button>
                        <button class="letter-button" id = "letter-button"value="W">W</button>
                        <button class="letter-button"id = "letter-button" value="X">X</button>
                        <button class="letter-button" id = "letter-button"value="Y">Y</button>
                        <button class="letter-button" id = "letter-button"value="Z">Z</button>
                </div>
                
                
            </div>
            <div class = "enterword">
                <h3 style="color: white;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Guessed the world already??Enter it below to see if it's right!!</h3>
                <input type="text" placeholder="Enter the word" id = "enteredword">
                <button class = "button-83" id = "check">Check</button>
            </div>
            <br><br><br>
            <div class = "win" id = "win">
                <span style='font-size:100px;'>&#128526;</span>
                <h1 style="color: white;margin-left: 100px;">Congrats!!You Won!!</h1>
                <div class = "choice" style="display: flex;margin-top: -60px;">
                    <button class = "button-83" id = "exit1">Close</button>
                </div>
            </div>
            <div class = "lost" id = "lost">
                <span style='font-size:100px;'>&#128542;</span>
                <h1 style="color: white;margin-left: 100px;">You lost!! Better luck next time</h1>
                <div class = "choice" style="display: flex;margin-top: -60px;">
                    <button class = "button-83"  id = "exit">Close</button>
                </div>
            </div>
        </div>
        
        <script>
            //dataset
            //movie dataset
            const movies = [
                { name: "Avatar", hint: "English - A sci-fi film about a human-alien hybrid." },
                { name: "Baahubali", hint: "Telugu - Epic historical fiction film known for its grandeur and visual effects." },
                { name: "Dilwale Dulhania Le Jayenge", hint: "Hindi - Romantic drama known for its iconic train scene and timeless love story." },
                { name: "Chennai Express", hint: "Hindi - Action-comedy film featuring a journey from Mumbai to Rameswaram." },
                { name: "3 Idiots", hint: "Hindi - Comedy-drama film advocating education reform and chasing dreams." },
                { name: "Nayakan", hint: "Tamil - Crime drama film inspired by the life of Mumbai underworld don Varadarajan Mudaliar." },
                { name: "Drishyam", hint: "Malayalam - Thriller film about a man who protects his family from suspicion after a crime." },
                { name: "Bangalore Days", hint: "Malayalam - Romantic comedy-drama film revolving around three cousins in Bangalore." },
                { name: "KGF Chapter 1", hint: "Kannada - Action-packed film set in the 1970s about a gold smuggler's rise to power." },
                { name: "Lucia", hint: "Kannada - Psychological thriller film that blurs the line between dreams and reality." },
                { name: "The Shawshank Redemption", hint: "English - Drama film based on the Stephen King novella 'Rita Hayworth and Shawshank Redemption'." },
                { name: "Inception", hint: "English - Sci-fi thriller film exploring the concept of dreams and reality." },
                { name: "Parasite", hint: "Korean - Dark comedy-thriller film about social class differences." },
                { name: "Life is Beautiful", hint: "Italian - Comedy-drama film set during the Holocaust, focusing on a father's efforts to shield his son from the horrors of internment." },
                { name: "Pan's Labyrinth", hint: "Spanish - Dark fantasy film set in post-Civil War Spain, blending fantasy elements with harsh reality." },
                { name: "Crouching Tiger, Hidden Dragon", hint: "Mandarin - Wuxia martial arts film exploring themes of love, honor, and redemption." },
                { name: "Amélie", hint: "French - Romantic comedy film about a quirky young woman in Paris who sets out to change the lives of those around her for the better." },
                { name: "Spirited Away", hint: "Japanese - Fantasy film about a young girl who discovers a mysterious, magical world." },
                { name: "City of God", hint: "Portuguese - Crime drama film depicting life in the favelas of Rio de Janeiro." },
                { name: "Oldboy", hint: "Korean - Neo-noir action thriller film about a man who seeks revenge after being imprisoned for 15 years." }
            ];

            //science dataset
            const science = [
                { name: "Atom", hint: "Basic unit of matter consisting of a nucleus surrounded by electrons." },
                { name: "DNA", hint: "Molecule that carries genetic instructions for the development, functioning, growth, and reproduction of all known organisms." },
                { name: "Gravity", hint: "Force that attracts two bodies toward each other, related to the mass of the objects and the distance between them." },
                { name: "Evolution", hint: "Process by which species change over time, often driven by natural selection, genetic drift, and mutation." },
                { name: "Photosynthesis", hint: "Process used by plants and other organisms to convert light energy into chemical energy." },
                { name: "Black Hole", hint: "Region of spacetime where gravity is so strong that nothing, not even light, can escape from it." },
                { name: "Gene", hint: "Unit of heredity that is transferred from a parent to offspring and determines some characteristic of the offspring." },
                { name: "Neutron", hint: "Subatomic particle found in the nucleus of an atom, with no net electric charge." },
                { name: "RNA", hint: "Molecule similar to DNA that plays a role in protein synthesis and other cellular functions." },
                { name: "Plate Tectonics", hint: "Scientific theory describing the large-scale motions of Earth's lithosphere." },
                { name: "Solar System", hint: "Collection of planets and other objects orbiting a star (in our case, the Sun)." },
                { name: "Big Bang", hint: "Cosmological model describing the rapid expansion of space and time from an initial singularity." },
                { name: "Climate Change", hint: "Long-term change in the average weather patterns of a region or the whole Earth." },
                { name: "Quantum Mechanics", hint: "Branch of physics dealing with the behavior of matter and light on the atomic and subatomic scales." },
                { name: "Mutation", hint: "Change in the DNA sequence of a cell's genome." },
                { name: "Nanotechnology", hint: "Field of science and technology focused on manipulating matter on an atomic and molecular scale." },
                { name: "Chemical Reaction", hint: "Process that results in the transformation of one set of chemical substances to another." },
                { name: "Fossil Record", hint: "Collection of fossils and their placement in chronological order to understand the history of life on Earth." },
                { name: "Genome", hint: "Complete set of genetic material present in an organism." },
                { name: "Artificial Intelligence", hint: "Branch of computer science dealing with the simulation of intelligent behavior in computers." }
            ];



            //books dataset
            const books = [
                { name: "1984", hint: "Dystopian novel by George Orwell" },
                { name: "To Kill a Mockingbird", hint: "Harper Lee's Pulitzer Prize-winning novel" },
                { name: "The Catcher in the Rye", hint: "J.D. Salinger's coming-of-age novel" },
                { name: "Pride and Prejudice", hint: "Jane Austen's classic romance" },
                { name: "The Great Gatsby", hint: "F. Scott Fitzgerald's Jazz Age novel" },
                { name: "Harry Potter and the Philosopher's Stone", hint: "First book in J.K. Rowling's series" },
                { name: "The Hobbit", hint: "Fantasy novel by J.R.R. Tolkien" },
                { name: "The Hunger Games", hint: "Suzanne Collins' dystopian trilogy starter" },
                { name: "The Da Vinci Code", hint: "Dan Brown's religious thriller" },
                { name: "Gone Girl", hint: "Gillian Flynn's psychological thriller" },
                { name: "The Girl on the Train", hint: "Paula Hawkins' gripping mystery" },
                { name: "The Lord of the Rings", hint: "Epic fantasy trilogy by J.R.R. Tolkien" },
                { name: "Moby-Dick", hint: "Herman Melville's tale of obsession and revenge" },
                { name: "Brave New World", hint: "Aldous Huxley's dystopian vision" },
                { name: "Jane Eyre", hint: "Charlotte Brontë's Gothic romance" },
                { name: "The Hitchhiker's Guide to the Galaxy", hint: "Douglas Adams' comedic sci-fi adventure" },
                { name: "War and Peace", hint: "Leo Tolstoy's epic novel of Russian society" },
                { name: "The Kite Runner", hint: "Khaled Hosseini's novel set in Afghanistan" },
                { name: "The Chronicles of Narnia", hint: "C.S. Lewis' classic fantasy series" },
                { name: "The Book Thief", hint: "Markus Zusak's novel set in Nazi Germany" }
            ];

            //actor names dataset
            const actornames = [
                { name: "Amitabh Bachchan", hint: "Legendary actor known as the 'Shahenshah' of Bollywood" },
                { name: "Shah Rukh Khan", hint: "Bollywood 'King' known for romantic roles and global popularity" },
                { name: "Rajinikanth", hint: "Superstar of Tamil cinema, known for his style and mass appeal" },
                { name: "Kamal Haasan", hint: "Versatile actor from Tamil cinema, known for his acting prowess" },
                { name: "Ranbir Kapoor", hint: "Young actor from Bollywood, known for his acting lineage" },
                { name: "Salman Khan", hint: "Bollywood 'Bhai' known for action-packed roles and philanthropy" },
                { name: "Prabhas", hint: "Telugu cinema actor, famous for his role in 'Baahubali'" },
                { name: "Ajay Devgn", hint: "Versatile actor known for action and intense roles in Bollywood" },
                { name: "Mahesh Babu", hint: "Popular actor from Telugu cinema, known for his charm and acting skills" },
                { name: "Vijay", hint: "Tamil cinema 'Thalapathy' known for his mass appeal and social message films" },
                { name: "Nawazuddin Siddiqui", hint: "Versatile actor known for his intense and character-driven roles" },
                { name: "Alia Bhatt", hint: "Talented actress known for her versatility and strong performances" },
                { name: "Deepika Padukone", hint: "Leading Bollywood actress known for her beauty and acting skills" },
                { name: "Rajkummar Rao", hint: "Critically acclaimed actor known for his diverse roles and versatility" },
                { name: "Vijay Sethupathi", hint: "Tamil actor known for his natural acting and unconventional roles" },
                { name: "Nani", hint: "Telugu actor known for his natural performances and varied roles" },
                { name: "Kangana Ranaut", hint: "Bold and talented actress known for her fearless roles and outspoken nature" },
                { name: "Samantha Akkineni", hint: "Popular actress from Telugu and Tamil cinema, known for her charm and acting prowess" },
                { name: "Ranveer Singh", hint: "Energetic actor known for his flamboyant style and versatile performances" },
                { name: "Anushka Sharma", hint: "Actress and producer known for her strong roles and progressive choices" }
            ];

            //getting all the variables required
            var play = document.getElementById("play");
            var want = document.getElementById("want");
            var guess = document.getElementById("guess");
            var genre = document.getElementById("genre");
            var hint = document.getElementById("hint");
            var close = document.getElementById("close");
            var rules = document.getElementById("rule-section");
            var rulebutton = document.getElementById("rules");
            var head = document.getElementById("header");
            var check = document.getElementById("check");
            var input = document.getElementById("enteredword");
            const win = document.getElementById("win");
            const lost = document.getElementById("lost");
            const letter = document.querySelectorAll('.letter-button')
            const exit1 = document.getElementById("exit1");
            const exit = document.getElementById("exit");
            var again = document.getElementById("again");
            var main = document.getElementById("main");
            var hangman = document.getElementById("hangman");
            var name;
            var letterindex;
            var hint1;
            let wordtry = 0;
            var count = 0;
            let lettertry = -1;
            var tryword = "";

            //close the rules box
            close.addEventListener("click",function(){
                rules.style.visibility = "hidden";
                want.style.visibility = "visible";
                head.style.filter = 'blur(0px)';
            })

            //displaying the rules box
            rulebutton.addEventListener("click",function(){
                rules.style.visibility = "visible";
                head.style.filter = 'blur(5px)';
                want.style.visibility = "hidden";
            })

            //exit the game
            exit1.addEventListener("click",function(){
                main.style.visibility = "hidden";
                win.style.visibility = "hidden";
                want.style.visibility = "visible";
                location.reload();
                tryword = "";

                
            })

            exit.addEventListener("click",function(){
                main.style.visibility = "hidden";
                win.style.visibility = "hidden";
                want.style.visibility = "visible";
                location.reload();
                tryword = "";
            })



            function generate(){
                //choosing a random index
                const randomindex = Math.floor(Math.random() * 20);

                //choosing the array according to the value specified
                if (genre.value === 'm'){
                    name = movies[randomindex].name;
                    hint1 = movies[randomindex].hint;
                }
                else if(genre.value === 's'){
                    name = science[randomindex].name;
                    hint1 = science[randomindex].hint;
                }
                else if(genre.value === 'b'){
                    name = books[randomindex].name;
                    hint1 = books[randomindex].hint;
                }
                else{
                    name = actornames[randomindex].name;
                    hint1 = actornames[randomindex].hint;
                }
            }
           
            //clicking the 'play game' button
            play.addEventListener("click",function(){
                if (genre.value === ''){
                    alert("Please select a genre!");
                }
                else{
                    document.documentElement.style.overflowY = 'scroll';
                    
                    want.style.visibility = "hidden";
                    main.style.visibility = "visible";

                    generate();
                    lettertry = 0;
                    
                    for(let i= 0;i<name.length;i++){
                        var newDiv;
                        if (name.charAt(i) === ' '){
                            newDiv = document.createElement('div');
                            newDiv.style.width = '30px';
                        }
                        else{
                            newDiv = document.createElement('div');
                            newDiv.id = `div-${i + 1}`;
                            newDiv.textContent = ' ';
                            newDiv.style.height = '20px';
                            newDiv.style.width = '30px';;
                            newDiv.style.borderBottom = '1px solid white';
                            newDiv.style.margin = '8px';
                        }
                        guess.appendChild(newDiv); 
                    }
                    const h3 = document.createElement('h3');
                    h3.textContent = "Hint : " + hint1;
                    h3.style.color = "white";
                    h3.style.marginLeft = "20px";
                    hint.appendChild(h3)
                } 
            })

            //checking the word entered by the user;
            check.addEventListener("click",function(){
                wordtry += 1;
                input.value = input.value.toLowerCase;
                if (input.value == name.toLowerCase){
                    win.style.visibility = "visible";
                    main.style.visibility = "hidden";
                    lettertry = 0;
                    /*name = "";
                    hint = "";
                    letter.forEach(button => {
                        button.style.background = "#f0f0f0";
                        
                    });*/
                }
                else{
                    if (wordtry == 2){
                        main.style.visibility = "hidden";
                        lost.style.visibility = "visible";
                        lettertry = 0;
                    }
                    else{
                        alert("Oops! Wrong Answer!")
                    }
                }
            })

             //checking if the letter is present in the word
             letter.forEach(button => {
                button.addEventListener('click', function() {
                    button.style.background = "grey";
                    name = name.toUpperCase();
                    console.log(name);
                    if (name.includes(button.value)){
                        letterindex = name.indexOf(button.value);
                        let divElement = document.getElementById(`div-${letterindex + 1}`);
                        divElement.textContent = button.value;
                        let count = name.split('').filter(char => char === button.value).length;
                        console.log("count");
                        console.log(count)
                        tryword = tryword + button.value.repeat(count);
                        console.log("tryword");
                        console.log(tryword);
                        console.log(tryword.length);
                        console.log(name.length);
                        if (count > 1){
                            for(let i = 1;i<count;i++){
                                let index = letterindex + 1;
                                letterindex = name.indexOf(button.value, index);
                                console.log(letterindex);
                                let divElement = document.getElementById(`div-${letterindex + 1}`);
                                divElement.textContent = button.value;

                            }
                        }
                        setTimeout(checkentry(),5000);
                       
                    } 
                    else{
                        lettertry += 1;
                        console.log(lettertry);
                        const filePath = `hangman-${lettertry}.svg`;
                        console.log(filePath);
                        

                        fetch(filePath)
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.text();
                            })
                            .then(svgContent => {
                                hangman.innerHTML = svgContent;
                            })
                            .catch(error => {
                                console.error('Error fetching SVG:', error);
                            });
                        

                        if (lettertry == 6){
                            main.style.visibility = "hidden";
                            lost.style.visibility = "visible";
                            lettertry = 0;
                            
                        }
                    }
                });
            });     
            
            function checkentry(){
                if ( tryword.length == name.length){
                            win.style.visibility = "visible";
                            main.style.visibility = "hidden";
                            lettertry = 0;
                }
                else{
                    if (name.includes(" ")){
                        if ( tryword.length == name.length - 1){
                            win.style.visibility = "visible";
                            main.style.visibility = "hidden";
                            lettertry = 0;
                        }
                    }
                }
            }
        </script>
    </body>
</html>
